{
    "contents" : "library(arules)\nlibrary(tkrplot)\nlibrary(arulesViz)\n\nsummer_tran <- read.transactions(file = \"Summer.csv\", \"basket\", sep = \",\")\n\nwinter_tran <- read.transactions(file = \"Winter.csv\", \"basket\", sep = \",\")\n\nautumn_tran <- read.transactions(file = \"Autumn.csv\", \"basket\", sep = \",\")\n\nspring_tran <- read.transactions(file = \"Autumn.csv\", \"basket\", sep = \",\")\n\n# plot frequent items\nitemFrequencyPlot (summer_tran, topN = 10, type = \"absolute\", \n                   main = \"Top Ten Summer Frequent Items\", col = \"red\")\n\nitemFrequencyPlot (winter_tran, topN = 10, type = \"absolute\", \n                   main = \"Top Ten Winter Frequent Items\", col = \"blue\") \n\nitemFrequencyPlot (autumn_tran, topN = 10, type = \"absolute\", \n                   main = \"Top Ten Autumn Frequent Items\", col = \"orange\") \n\nitemFrequencyPlot (spring_tran, topN = 10, type = \"absolute\", \n                   main = \"Top Ten Spring Frequent Items\", col = \"green\") \n\n\n# calculates support for frequent items\nsummer_itemsets <- eclat(summer_tran, \n                         parameter = list(supp = 0.07, maxlen = 15)) \n\nwinter_itemsets <- eclat(winter_tran, \n                         parameter = list(supp = 0.07, maxlen = 15)) \n\nautumn_itemsets <- eclat(autumn_tran, \n                         parameter = list(supp = 0.07, maxlen = 15)) \n\nspring_itemsets <- eclat(spring_tran, \n                         parameter = list(supp = 0.07, maxlen = 15))\n\n# Min Support as 0.001 (0.1%), confidence as 0.8 (80%)\nsummer_rules <- apriori (summer_tran, \n                         parameter = list(supp = 0.001, conf = 0.8))\n\nwinter_rules <- apriori (winter_tran, \n                         parameter = list(supp = 0.001, conf = 0.8))\n\nautumn_rules <- apriori (autumn_tran, \n                         parameter = list(supp = 0.001, conf = 0.8))\n\nspring_rules <- apriori (spring_tran, \n                         parameter = list(supp = 0.001, conf = 0.8))\n\n# show the support, lift and confidence for all rules\n\n# In Summer Transactions..\nquality(summer_rules)\n\n# In Winter Transactions..\nquality(winter_rules)\n\n# In Autumn Transactions..\nquality(autumn_rules)\n\n# In Spring Transactions..\nquality(spring_rules)\n\n# Show the top 5 rules, but only 2 digits\noptions (digits=2)\n\n# In Summer Transactions..\ninspect (summer_rules[1:5])\n\n# In Winter Transactions..\ninspect (winter_rules[1:5])\n\n# In Autumn Transactions..\ninspect (autumn_rules[1:5])\n\n# In Spring Transactions..\ninspect (spring_rules[1:5])\n\n# Interactive Plot\n# Summer Plots..\n\nplot (summer_rules[1:10], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (summer_rules, measure = c(\"support\", \"lift\"),\n      shading = \"confidence\")\n\n# Winter Plots..\n\nplot (winter_rules[1:10], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (winter_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n# Autumn Plots..\n\nplot (autumn_rules[1:10], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (autumn_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n# Spring Plots..\n\nplot (spring_rules[1:10], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (spring_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n# 'high-confidence' rules.\n\n# In Summer Transactions..\nsummer_rules <- sort (summer_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(summer_rules[1:5])\n\n# In Winter Transcations..\nwinter_rules <- sort (winter_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(winter_rules[1:5])\n\n# In Autumn Transactions..\nautumn_rules <- sort (autumn_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(autumn_rules[1:5])\n\n# In Spring Transactions..\nspring_rules <- sort (spring_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(spring_rules[1:5])\n\n\n\n# Question-2\n# What products are usually bought\n# before a certain product[user-defined]?\n\n# In Summer Transactions..\nsummer_prior_buying_rules <- apriori (data = summer_tran, \n                  parameter = list (supp = 0.001, conf = 0.08), \n                  appearance = list (default=\"lhs\",rhs=\"soda\"), \n                  control = list (verbose=F))\n\nsummer_prior_buying_rules <- sort (\n  summer_prior_buying_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(summer_prior_buying_rules[1:5])\n\n\n\n# In Winter Transcations..\nwinter_prior_buying_rules <- apriori (data = winter_tran, \n                               parameter = list (supp = 0.001, conf = 0.08), \n                               appearance = list (default=\"lhs\",rhs=\"whole milk\"), \n                               control = list (verbose=F))\n\nwinter_prior_buying_rules <- sort (\n  winter_prior_buying_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(winter_prior_buying_rules[1:5])\n\n# In Autumn Transactions..\nautumn_prior_buying_rules <- apriori (data = autumn_tran, \n                               parameter = list (supp = 0.015, conf = 0.08), \n                               appearance = list (default=\"lhs\",rhs=\"yogurt\"), \n                               control = list (verbose=F))\n\nautumn_prior_buying_rules <- sort (\n  autumn_prior_buying_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(autumn_prior_buying_rules[1:5])\n\n# In Spring Transactions..\nspring_prior_buying_rules <- apriori (data = spring_tran, \n                               parameter = list (supp = 0.015, conf = 0.08), \n                               appearance = list (default=\"lhs\",rhs=\"rolls/buns\"), \n                               control = list (verbose=F))\n\nspring_prior_buying_rules <- sort (\n  spring_prior_buying_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(spring_prior_buying_rules[1:5])\n\n# Interactive Plot\n\n# Summer Plots \"Event-[X] -> Event-A\"..\n\nplot (summer_prior_buying_rules[1:5], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (summer_prior_buying_rules, measure = c(\"support\", \"lift\"),\n      shading = \"confidence\")\n\n# Winter Plots \"Event-[X] -> Event-A\"..\n\nplot (winter_prior_buying_rules[1:5], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (winter_prior_buying_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n# Autumn Plots \"Event-[X] -> Event-A\"..\n\nplot (autumn_prior_buying_rules[1:5], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (autumn_prior_buying_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n# Spring Plots \"Event-[X] -> Event-A\"..\n\nplot (spring_prior_buying_rules[1:5], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (spring_prior_buying_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n# Question-3\n# What products customers usually buy after \n# buying a certain product[user-defined]?\n\n# In Summer Transactions..\nsummer_post_buying_rules <- apriori (data = summer_tran, \n             parameter = list (supp = 0.001, conf = 0.15, minlen = 2), \n             appearance = list (default=\"rhs\",lhs=\"yogurt\"), \n             control = list (verbose=F))\n\nsummer_post_buying_rules <- sort (\n  summer_post_buying_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(summer_post_buying_rules[1:5])\n\n# In Winter Transactions..\nwinter_post_buying_rules <- apriori (data = winter_tran, \n            parameter = list (supp = 0.001, conf = 0.15, minlen = 2), \n            appearance = list (default=\"rhs\",lhs=\"ready soups\"), \n            control = list (verbose=F))\n\nwinter_post_buying_rules <- sort (\n  winter_post_buying_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(winter_post_buying_rules[1:1])\n\n# In Autumn Transactions..\nautumn_post_buying_rules <- apriori (data = autumn_tran, \n            parameter = list (supp = 0.015, conf = 0.15, minlen = 2), \n            appearance = list (default=\"rhs\",lhs=\"bottled beer\"), \n            control = list (verbose=F))\n\nautumn_post_buying_rules <- sort (\n  autumn_post_buying_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(autumn_post_buying_rules[1:1])\n\n# In Spring Transactions..\nspring_post_buying_rules <- apriori (data = spring_tran, \n            parameter = list (supp = 0.015, conf = 0.15, minlen = 2), \n            appearance = list (default=\"rhs\",lhs=\"brown bread\"), \n            control = list (verbose=F))\n\nspring_post_buying_rules <- sort (\n  spring_post_buying_rules, by=\"confidence\", decreasing=TRUE)\n\ninspect(spring_post_buying_rules[1:1])\n\n# Interactive Plot\n\n# Summer Plots \"Event-A -> Event[X]\"..\n\nplot (summer_post_buying_rules[1:5], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (summer_post_buying_rules, measure = c(\"support\", \"lift\"),\n      shading = \"confidence\")\n\n# Winter Plots \"Event-A -> Event[X]\"..\n\nplot (winter_post_buying_rules[1:1], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (winter_post_buying_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n# Autumn Plots \"Event-A -> Event[X]\"..\n\nplot (autumn_post_buying_rules[1:1], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (autumn_post_buying_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n# Spring Plots \"Event-A -> Event[X]\"..\n\nplot (spring_post_buying_rules[1:1], method=\"graph\", \n      interactive=TRUE, shading = \"confidence\")\n\nplot (spring_post_buying_rules, measure = c(\"support\", \"lift\"), \n      shading = \"confidence\")\n\n",
    "created" : 1452936874489.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1155520551",
    "id" : "516E8D2E",
    "lastKnownWriteTime" : 1453058263,
    "path" : "C:/Users/Ali/Desktop/BDP-Project/Seasonal-Analysis.R",
    "project_path" : "Seasonal-Analysis.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}